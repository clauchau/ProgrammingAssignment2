demo()
demo(Hershey)
a <- available.packages()
head(rownames(a),10)
install.packages("slidify")
install.packages("ggplot2")
install.packages("devtools")
library(slidify)
search()
install.packages("slidify")
update.packages(checkBuilt=TRUE, ask=FALSE)
library(devtools)
find_rtools()
install("KernSmooth")
install.packages("KernSmooth")
library(KernSmooth)
install.packages("slidify")
?<<-
?`<<-`
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
makeVector(c(1,2))
x
m
setwd("~/S/DataScience/RProgramming/ProgrammingAssignment2")
get()
get(x)
?get
?lf
lf <- makeVector(c(1,2))
lf
lf$set
lf$get()
x
lf$getmean()
lf2 <- makeVector(c(3,5))
lf$get()
lg2$get()
lf2$get()
cachemean(lf)
lf$getmean()
lf2$getmean()
lf$set(c(1,4))
lf$get()
lf$getmean()
?inverse
cachemean(lf)
cachemean(lf)
cachemean(lf)
